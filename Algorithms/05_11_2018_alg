/*

	Algorithms I. - 5. 11. 2018
	Student: David Miko
	Professor: Dohnálek

	Popis: Vyhledávání v poli...

*/

#include <iostream>
#include <random>
#include <ctime>

using namespace std;

int main(void)
{
	cout << "\t\tAlgorithms I. - 11/05/2018" << endl;
	cout << "==========================================================" << endl;

	// Dereference pole není nutná - protože máme indexaci pole 

	srand(time(0));


	int N = 7; // count of elements
	int *p = new int[N]; // dynamically allocated array

	bool unused = true;

	bool *unused_values = new bool[N];

	for (int i = 0; i < N; i++)
	{
		unused_values[i] = false;
	}

	// finding unique value
	for (int i = 0; i < N; i++)
	{
		unused = true;
		int rand_num = rand() % N + 1;
		for (int j = 0; j < i; j++)
		{
			if (p[j] == rand_num)
			{
				unused = false;
			}
		}

		if (unused)
		{
			p[i] = rand_num;
			cout << p[i] << "; ";
		}

		else
		{
			i--;
		}

	}

	cout << endl;

	// sort array

	
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N -1; j++)
		{
			if (p[j] > p[j+1])
			{
				int pom = p[j];
				p[j] = p[j + 1];
				p[j + 1] = pom;
				
			}
		}
	}

	for (int i = 0; i < N; i++)
	{
		cout << p[i] << "; ";
	}


	//Finding number in an array
	cout << endl << "Find a number: ";

	int wanted_num;
	cin >> wanted_num;

	/*int i = 0;

	for (i = 0; i < N; i++)
	{
		if (p[i] == wanted_num)
		{
			break;
		}
	}

	if (i < N)
	{
		cout << "Number " << wanted_num << " FOUND!";
	}

	else
	{
		cout << "Number " << wanted_num << " NOT FOUND!";
	}*/



	// finding element in an array half of duration -- need to sort array
	int l = 0;
	int r = N - 1;

	int M;

	while (l <= r)
	{
		M = (l + r) / 2;
		if (p[M] == wanted_num)
		{
			cout << "Number " << wanted_num << " FOUND!";
			break;
		}

		else if (wanted_num > p[M])
		{
			l = M + 1;
			r = N - 1;
		}

		else if (wanted_num < p[M])
		{
			l = 0;
			r = M - 1;
		}
	}






	system("pause");
	return (0);
}
